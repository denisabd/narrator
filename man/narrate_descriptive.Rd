% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/narrate_descriptive.R
\name{narrate_descriptive}
\alias{narrate_descriptive}
\title{Create Descriptive Narrative}
\usage{
narrate_descriptive(
  df,
  measure = NULL,
  dimensions = NULL,
  summarization = "sum",
  coverage = 0.5,
  coverage_limit = 5,
  narration_depth = 3,
  template_total = "Total {measure} across all {pluralize(dimension1)} is {total}. ",
  template_outlier = "Outlying {dimension} by {measure}: {outlier_insight}. ",
  template_outlier_multiple =
    "Outlying {pluralize(dimension)} by {measure}: {outlier_insight}. ",
  template_outlier_l2 =
    "In {root_outlier_dimension}, significant {dimension_l2} by {measure}: {outlier_insight}",
  use_renviron = FALSE,
  return_data = FALSE,
  ...
)
}
\arguments{
\item{df}{Data frame of tibble, can be aggregated or raw}

\item{measure}{Numeric measure for function to create calculations with,
if NULL then it will take the first numeric field available}

\item{dimensions}{Vector of dimensions for analysis, by default all character
or factor variable will be used}

\item{summarization}{Approach for data summarization/aggregation - 'sum', 'count' or 'mean'}

\item{coverage}{Portion of variability to be covered by narrative, 0 to 1}

\item{coverage_limit}{Maximum number of elements to be narrated, overrides
coverage to avoid extremely verbose narrative creation}

\item{narration_depth}{Parameter to control the depth of the analysis}

\item{template_total}{glue template for total volumes narrative}

\item{template_outlier}{glue template for single outlier narrative}

\item{template_outlier_multiple}{glue template for multiple outliers narrative}

\item{use_renviron}{Whether to use .Renviron variables in the template}

\item{return_data}{return a list of variables used in the function's templates}

\item{...}{other arguments passed to glue::glue}
}
\value{
character vector, glue
}
\description{
Create Descriptive Narrative
}
\examples{
narrator::sales \%>\%
narrate_descriptive(measure = "Sales",
            dimensions = c("Territory", "Product"))

narrator::sales \%>\%
  dplyr::filter(Product \%in\% c("Product A", "Product B")) \%>\%
  dplyr::group_by(Product, Territory)  \%>\%
  dplyr::summarise(Quantity = sum(Quantity)) \%>\%
  narrate_descriptive()
}
