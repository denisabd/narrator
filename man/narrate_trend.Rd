% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/narrate_trend.R
\name{narrate_trend}
\alias{narrate_trend}
\title{Create Narrative for Metric Development in Time}
\usage{
narrate_trend(
  df,
  measure = NULL,
  dimensions = NULL,
  date = NULL,
  frequency = NULL,
  summarization = "sum",
  type = "yoy",
  coverage = 0.5,
  coverage_limit = 5,
  narration_depth = 2,
  template_total =
    "From {timeframe_prev} to {timeframe_curr}, {measure} had an {trend} of {change} ({change_p}, {total_prev} to {total_curr}).",
  template_average =
    "Average {measure} had an {trend} of {change} ({change_p}, {total_prev} to {total_curr}).",
  template_outlier =
    "{dimension} with biggest changes of {measure} is {outlier_insight}.",
  template_outlier_multiple =
    "{pluralize(dimension)} with biggest changes of {measure} are {outlier_insight}.",
  template_outlier_l2 =
    "In {level_l1}, significant {level_l2} by {measure} change is {outlier_insight}.",
  template_outlier_l2_multiple =
    "In {level_l1}, significant {pluralize(level_l2)} by {measure} change are {outlier_insight}.",
  use_renviron = FALSE,
  return_data = FALSE,
  simplify = FALSE,
  format_numbers = TRUE,
  collapse_sep = ", ",
  collapse_last = " and ",
  ...
)
}
\arguments{
\item{df}{\code{\link[=data.frame]{data.frame()}} or \code{\link[=tibble]{tibble()}} Data frame of tibble, can be aggregated or raw}

\item{measure}{Numeric measure for function to create calculations with,
if NULL then it will take the first numeric field available}

\item{dimensions}{Vector of dimensions for analysis, by default all character
or factor variable will be used}

\item{date}{Name of the date column to be used for time based analysis}

\item{frequency}{Level of time based aggregation for comparing across years}

\item{summarization}{Approach for data summarization/aggregation - 'sum', 'count' or 'average'}

\item{type}{Type of trend analysis to create: 1 or 'yoy', 2 or 'previous period', 3 or 'same period last year'}

\item{coverage}{Numeric portion of variability to be covered by narrative, 0 to 1}

\item{coverage_limit}{Integer maximum number of elements to be narrated, overrides
coverage to avoid extremely verbose narrative creation}

\item{narration_depth}{Parameter to control the depth of the analysis 1 for summary and 2 for detailed}

\item{template_total}{\code{\link[glue]{glue}} template for total volumes narrative}

\item{template_average}{\code{\link[glue]{glue}} template for average volumes narrative}

\item{template_outlier}{\code{\link[glue]{glue}} template for single outlier narrative}

\item{template_outlier_multiple}{\code{\link[glue]{glue}} template for multiple outliers narrative}

\item{template_outlier_l2}{\code{\link[glue]{glue}} template for deeper hierarchical single outlier narrative}

\item{template_outlier_l2_multiple}{\code{\link[glue]{glue}} template for deeper hierarchical multiple outliers narrative}

\item{use_renviron}{If \link{TRUE} use .Renviron variables in the template.
You can also set \code{options(narrator.use_renviron = TRUE)} to make it global for the session,
or create an environment variable "use_renviron" by changing your .Renviron file \code{usethis::edit_r_environ()}}

\item{return_data}{If \link{TRUE} - return a list of variables used in the function's templates}

\item{simplify}{If \link{TRUE} - return a character vector, if \link{FALSE} - named list}

\item{format_numbers}{If \link{TRUE} - format big numbers to K/M/B using \code{\link[=format_num]{format_num()}} function}

\item{collapse_sep}{Separator for \code{\link[glue]{glue_collapse}} in cases with multiple values in single variable}

\item{collapse_last}{Separator for \code{\link[glue]{glue_collapse}} for the last item, in cases with multiple values in single variable}

\item{...}{other arguments passed to \code{\link[glue]{glue}}}
}
\value{
A \code{\link[=list]{list()}} of narratives by default and \code{\link[=character]{character()}} if \code{simplify = TRUE}
}
\description{
Create Narrative for Metric Development in Time
}
\examples{
sales \%>\%
 dplyr::mutate(Date = lubridate::floor_date(Date, unit = "week")) \%>\%
 dplyr::group_by(Region, Product, Date) \%>\%
 dplyr::summarise(Sales = sum(Sales, na.rm = TRUE)) \%>\%
 narrate_trend()
}
