[{"path":"https://denisabd.github.io/narrator/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Denis Abdullin Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://denisabd.github.io/narrator/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Denis Abdullin. Author, maintainer.","code":""},{"path":"https://denisabd.github.io/narrator/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Abdullin D (2023). narrator: Create Natural Language Text Narratives Data. R package version 0.0.1, https://denisabd.github.io/narrator/.","code":"@Manual{,   title = {narrator: Create Natural Language Text Narratives from the Data},   author = {Denis Abdullin},   year = {2023},   note = {R package version 0.0.1},   url = {https://denisabd.github.io/narrator/}, }"},{"path":"https://denisabd.github.io/narrator/index.html","id":"narrator","dir":"","previous_headings":"","what":"Create Natural Language Text Narratives from the Data","title":"Create Natural Language Text Narratives from the Data","text":"Template-based NLG framework creating text narratives data","code":""},{"path":"https://denisabd.github.io/narrator/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Natural Language Text Narratives from the Data","text":"can install development version narrator GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"denisabd/narrator\")"},{"path":"https://denisabd.github.io/narrator/index.html","id":"basic-use","dir":"","previous_headings":"","what":"Basic Use","title":"Create Natural Language Text Narratives from the Data","text":"","code":"library(narrator)  sales %>%   narrate_descriptive(measure = \"Sales\",                dimensions = c(\"Territory\", \"Productline\")) #> Sales across all Territories is 10032628.85. Outlying Territory by Sales is EMEA (5 M, 49.6%). Outlying Productline by Sales is Classic Cars (3.9 M, 39.1%)."},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Format numeric value — format_number","title":"Format numeric value — format_number","text":"Format numeric value","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format numeric value — format_number","text":"","code":"format_number(   num,   format = \"auto\",   decimals = 1,   threshold = 1e+06,   format_list = c(\"\", \"K\", \"M\", \"B\", \"T\") )"},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format numeric value — format_number","text":"num Number numeric vector format Format numeric output - \"auto\", \"K\", \"M\", \"B\" \"T\" decimals Number decimal numbers rounding threshold Threshold converting specific format, threshold thousand delimiters added format_list List formats use automated","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format numeric value — format_number","text":"","code":"format_number(27334254) #> [1] \"27.3 M\" format_number(c(27334254, 12332, 23425435534)) #> [1] \"27.3 M\" \"12.3 K\" \"23.4 B\""},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Descriptive Narrative — narrate_descriptive","title":"Create Descriptive Narrative — narrate_descriptive","text":"Create Descriptive Narrative","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Descriptive Narrative — narrate_descriptive","text":"","code":"narrate_descriptive(   df,   measure = NULL,   dimensions = NULL,   coverage = 0.5,   coverage_limit = 5,   narrative_total = \"{measure} across all {pluralize(dimension1)} is {total}. \",   narrative_outlier = \"Outlying {dimension} by {measure} is {outlier_insight}. \",   narrative_outlier_multiple =     \"Outlying {pluralize(dimension)} by {measure} are {outlier_insight}. \",   ... )"},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Descriptive Narrative — narrate_descriptive","text":"...","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Descriptive Narrative — narrate_descriptive","text":"","code":"sales %>% narrate_desc(measure = \"Sales\",             dimensions = c(\"Territory\", \"State\")) #> Error in narrate_desc(., measure = \"Sales\", dimensions = c(\"Territory\",     \"State\")): could not find function \"narrate_desc\""},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":null,"dir":"Reference","previous_headings":"","what":"Pluralize a word — pluralize","title":"Pluralize a word — pluralize","text":"Pluralize word","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pluralize a word — pluralize","text":"","code":"pluralize(x, n = 2, prepend = FALSE)"},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pluralize a word — pluralize","text":"x character vector words make plural n amount plural (plurals change amount also impacts prepend functionality) prepend prepend value n output? Default: FALSE","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pluralize a word — pluralize","text":"character vector modified pluralized words","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pluralize a word — pluralize","text":"","code":"pluralize('test') #> [1] \"tests\" pluralize('test', 5) #> [1] \"tests\" pluralize('test', 5, TRUE) #> [1] \"5 tests\" pluralize('regex') #> [1] \"regexes\""}]
