[{"path":"https://denisabd.github.io/narrator/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Denis Abdullin Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://denisabd.github.io/narrator/articles/descriptive.html","id":"descriptive-narrative","dir":"Articles","previous_headings":"","what":"Descriptive Narrative","title":"Descriptive Narratives","text":"Basic narrative type descriptive stats, looking outliers biggest contributors total volumes data set. narratives quite useful can help look deeper data set hierarchy.","code":""},{"path":"https://denisabd.github.io/narrator/articles/descriptive.html","id":"simple-table","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Simple Table","title":"Descriptive Narratives","text":"Starting simplest table one dimension one measure. overall sales volume well outlying Territories analyzed.","code":"df_one <- sales %>%   group_by(Region) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales))  kable(df_one) narrate_descriptive(df_one) #> $`Total Sales` #> Total Sales across all Regions: 2.1 M. #>  #> $`Region by Sales` #> Outlying Regions by Sales are NA (1 M, 47.4 %), EMEA (655.4 K, 30.7 %)."},{"path":"https://denisabd.github.io/narrator/articles/descriptive.html","id":"summarization","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Summarization","title":"Descriptive Narratives","text":"multiple summarization/aggregation options data frame, controlled summarization argument can sum, count mean","code":"sales %>%   narrate_descriptive(measure = \"Sales\", dimensions = \"Region\", summarization = \"count\") #> $`Total Sales` #> Total Sales across all Regions: 985. #>  #> $`Region by Sales` #> Outlying Regions by Sales are NA (459, 46.2 %), EMEA (301, 30.3 %). sales %>%   narrate_descriptive(measure = \"Sales\", dimensions = \"Region\", summarization = \"mean\") #> $`Total Sales` #> Total Sales across all Regions: 2,134.866. #>  #> $`Region by Sales` #> Outlying Regions by Sales are LATAM (2,208.203, 26.1 %), NA (2,180.194, 25.8 %)."},{"path":"https://denisabd.github.io/narrator/articles/descriptive.html","id":"multiple-dimensions","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Multiple Dimensions","title":"Descriptive Narratives","text":"","code":"df_two <- sales %>%   filter(Region %in% c(\"NA\", \"EMEA\")) %>%   group_by(Region, Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales))  kable(df_two) narrate_descriptive(df_two) #> $`Total Sales` #> Total Sales across all Regions: 1.7 M. #>  #> $`Region by Sales` #> Outlying Region by Sales is NA (1 M, 60.7 %). #>  #> $`NA by Product` #> In NA, significant Products by Sales are Product E (241.6 K, 23.9 %), Product B (201.9 K, 20 %), Product F (154.1 K, 15.2 %). #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (440.2 K, 26.4 %), Product B (297.8 K, 17.9 %), Product F (247 K, 14.8 %)."},{"path":"https://denisabd.github.io/narrator/articles/descriptive.html","id":"depth","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Depth","title":"Descriptive Narratives","text":"Narration depth can controlled narration_depth argument. get summary narratives set narration_depth = 1","code":"narrate_descriptive(df_two, narration_depth = 1) #> $`Total Sales` #> Total Sales across all Regions: 1.7 M. #>  #> $`Region by Sales` #> Outlying Region by Sales is NA (1 M, 60.7 %). #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (440.2 K, 26.4 %), Product B (297.8 K, 17.9 %), Product F (247 K, 14.8 %)."},{"path":"https://denisabd.github.io/narrator/articles/descriptive.html","id":"coverage","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Coverage","title":"Descriptive Narratives","text":"Key argument narratives coverage. used narrate important things avoid simple looping dimension levels.  default coverage set 0.5 means narration stop soon cumulative sum reaches 50 % mark. increased coverage, additional narrative returned.","code":"df_three <- sales %>%   group_by(Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales))  df_three %>%   mutate(Share = round(Sales/sum(Sales)*100, 1),          Cumulative = cumsum(Share)) %>%   kable() narrate_descriptive(df_three) #> $`Total Sales` #> Total Sales across all Products: 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). narrate_descriptive(df_three, coverage = 0.7) #> $`Total Sales` #> Total Sales across all Products: 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %)."},{"path":"https://denisabd.github.io/narrator/articles/descriptive.html","id":"changing-templates","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Changing Templates","title":"Descriptive Narratives","text":"Template-based systems based calculations individual variables, combining together inside template. can return list calculated variables full narrative realization: Let’s change template narrative function rework wording well changing ‘’ ‘’ since Sales plural: can set templates using usethis::edit_r_environ() setting environment variable using data science platform capabilities. method little handy setting .Renviron variable names using certain convention adding use_renviron = TRUE narrate function. example created variable uses unique part function name, underscore, template name - descriptive + - + template_total can get templates currently available package list_templates() function:","code":"narrate_descriptive(df_three, coverage = 0.7, return_data = TRUE) #> $template_total #> Total Sales across all Products: 2.1 M. #>  #> $narrative #> $narrative$`Total Sales` #> Total Sales across all Products: 2.1 M. #>  #> $narrative$`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %). #>  #>  #> $template_outlier_final #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %). #>  #> $measure #> [1] \"Sales\" #>  #> [[5]] #> [1] \"Product\" #>  #> $total #> [1] \"2.1 M\" #>  #> $outlier_insight #> [1] \"Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %)\" narrate_descriptive(   df_three,   template_total = \"Overall {measure} for all {pluralize(dimension1)} are equal to {total}. \") #> $`Total Sales` #> Overall Sales for all Products are equal to 2.1 M.  #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). Sys.getenv(\"descriptive_template_total\")  narrate_descriptive(   df_three,template_total = Sys.getenv(\"descriptive_template_total\")   ) narrate_descriptive(df_three, use_renviron = TRUE) #> $`Total Sales` #> Total Sales is equal to 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). list_templates() %>%   kable()"},{"path":"https://denisabd.github.io/narrator/articles/echarts.html","id":"simple-plots","dir":"Articles","previous_headings":"","what":"Simple Plots","title":"Narrate Echarts Plots","text":"Let’s create bar plot sales data: can extract underlying data plot object using echarts4r::e_get_data() function convert tibble suitable narrative extraction. can add narrative plot echarts4r::e_text_g() can done scatter plot pie chart, scatter narrate_descriptive() take first numeric measure.","code":"barplot <- sales %>%   dplyr::group_by(Region) %>%   dplyr::summarise(Sales = sum(Sales)) %>%   echarts4r::e_chart(Region) %>%   echarts4r::e_bar(Sales) %>%   echarts4r::e_tooltip()  barplot bar_narrative <- barplot %>%   echarts4r::e_get_data() %>%   purrr::map_df(bind_rows) %>%   narrate_descriptive()  bar_narrative #> $`Total Sales` #> Total Sales across all Regions: 2.1 M. #>  #> $`Region by Sales` #> Outlying Regions by Sales are NA (1 M, 47.4 %), EMEA (655.4 K, 30.7 %). bar_narrative <- bar_narrative %>%   unlist(use.names = FALSE) %>%   paste(\"\\n\", collapse = \"\")   barplot %>%   echarts4r::e_text_g(     style = list(       text = bar_narrative,       fontSize = 16     ),     left = \"2%\",     top = \"3%\",     rotation = 0   ) scatterplot <- sales %>%   dplyr::group_by(Region, Product) %>%   dplyr::summarise(Sales = sum(Sales),             Quantity = sum(Quantity),             Price = mean(Price), .groups = \"keep\") %>%   echarts4r::e_chart(Sales) %>%   echarts4r::e_scatter(Quantity, Price) %>%   echarts4r::e_tooltip()  scatterplot scatterplot %>%   echarts4r::e_get_data() %>%   purrr::map_df(bind_rows) %>%   narrate_descriptive() #> $`Total Sales` #> Total Sales across all Regions: 2.1 M. #>  #> $`Region by Sales` #> Outlying Regions by Sales are NA (1 M, 47.4 %), EMEA (655.4 K, 30.7 %). #>  #> $`NA by Product` #> In NA, significant Products by Sales are Product E (241.6 K, 23.9 %), Product B (201.9 K, 20 %), Product F (154.1 K, 15.2 %). #>  #> $`EMEA by Product` #> In EMEA, significant Products by Sales are Product E (198.6 K, 30.3 %), Product B (95.9 K, 14.6 %), Product F (92.9 K, 14.2 %). #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). piechart <- sales %>%   dplyr::group_by(Product) %>%   dplyr::summarise(Sales = sum(Sales)) %>%   echarts4r::e_chart(Product) %>%   echarts4r::e_pie(Sales, radius = c(\"50%\", \"70%\")) %>%   echarts4r::e_tooltip()  piechart piechart %>%   echarts4r::e_get_data() %>%   purrr::map_df(bind_rows) %>%   narrate_descriptive() #> $`Total Sales` #> Total Sales across all Products: 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %)."},{"path":"https://denisabd.github.io/narrator/articles/intro.html","id":"descriptive-narrative","dir":"Articles","previous_headings":"","what":"Descriptive Narrative","title":"Introducing narrator","text":"Basic narrative type descriptive stats, looking outliers biggest contributors total volumes data set. narratives quite useful can help look deeper data set hierarchy.","code":""},{"path":"https://denisabd.github.io/narrator/articles/intro.html","id":"simple-table","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Simple Table","title":"Introducing narrator","text":"Starting simplest table one dimension one measure. overall sales volume well outlying Territories analyzed.","code":"df_one <- sales %>%   group_by(Region) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales))  kable(df_one) narrate_descriptive(df_one) #> $`Total Sales` #> Total Sales across all Regions: 2.1 M. #>  #> $`Region by Sales` #> Outlying Regions by Sales are NA (1 M, 47.4 %), EMEA (655.4 K, 30.7 %)."},{"path":"https://denisabd.github.io/narrator/articles/intro.html","id":"multiple-dimensions","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Multiple Dimensions","title":"Introducing narrator","text":"","code":"df_two <- sales %>%   filter(Region %in% c(\"NA\", \"EMEA\")) %>%   group_by(Region, Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales))  kable(df_two) narrate_descriptive(df_two) #> $`Total Sales` #> Total Sales across all Regions: 1.7 M. #>  #> $`Region by Sales` #> Outlying Region by Sales is NA (1 M, 60.7 %). #>  #> $`NA by Product` #> In NA, significant Products by Sales are Product E (241.6 K, 23.9 %), Product B (201.9 K, 20 %), Product F (154.1 K, 15.2 %). #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (440.2 K, 26.4 %), Product B (297.8 K, 17.9 %), Product F (247 K, 14.8 %)."},{"path":"https://denisabd.github.io/narrator/articles/intro.html","id":"coverage","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Coverage","title":"Introducing narrator","text":"Key argument narratives coverage. used narrate important things avoid simple looping dimension levels.  default coverage set 0.5 means narration stop soon cumulative sum reaches 50 % mark. increased coverage, additional narrative returned.","code":"df_three <- sales %>%   group_by(Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales))  df_three %>%   mutate(Share = round(Sales/sum(Sales)*100, 1),          Cumulative = cumsum(Share)) %>%   kable() narrate_descriptive(df_three) #> $`Total Sales` #> Total Sales across all Products: 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). narrate_descriptive(df_three, coverage = 0.7) #> $`Total Sales` #> Total Sales across all Products: 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %)."},{"path":"https://denisabd.github.io/narrator/articles/intro.html","id":"changing-templates","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Changing Templates","title":"Introducing narrator","text":"Template-based systems based calculations individual variables, combining together inside template. can return list calculated variables full narrative realization: Let’s change template narrative function rework wording well changing ‘’ ‘’ since Sales plural: can set templates using usethis::edit_r_environ() setting environment variable using data science platform capabilities. method little handy setting .Renviron variable names using certain convention adding use_renviron = TRUE narrate function. example created variable uses unique part function name, underscore, template name - descriptive + - + template_total can get templates currently available package list_templates() function:","code":"narrate_descriptive(df_three, coverage = 0.7, return_data = TRUE) #> $template_total #> Total Sales across all Products: 2.1 M. #>  #> $narrative #> $narrative$`Total Sales` #> Total Sales across all Products: 2.1 M. #>  #> $narrative$`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %). #>  #>  #> $template_outlier_final #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %). #>  #> $measure #> [1] \"Sales\" #>  #> [[5]] #> [1] \"Product\" #>  #> $total #> [1] \"2.1 M\" #>  #> $outlier_insight #> [1] \"Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %), Product H (262.7 K, 12.3 %)\" narrate_descriptive(   df_three,   template_total = \"Overall {measure} for all {pluralize(dimension1)} are equal to {total}. \") #> $`Total Sales` #> Overall Sales for all Products are equal to 2.1 M.  #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). Sys.getenv(\"descriptive_template_total\") #> [1] \"Total {measure} = {total}.\"  narrate_descriptive(   df_three,template_total = Sys.getenv(\"descriptive_template_total\")   ) #> $`Total Sales` #> Total Sales = 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). narrate_descriptive(df_three, use_renviron = TRUE) #> $`Total Sales` #> Total Sales = 2.1 M. #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). list_templates() %>%   kable()"},{"path":"https://denisabd.github.io/narrator/articles/intro.html","id":"correcting-text","dir":"Articles","previous_headings":"Descriptive Narrative","what":"Correcting Text","title":"Introducing narrator","text":"can correct sentence using, currently experimental correct_text() function. requires udpipe installation load model choosing working directory.","code":"correct_text(\"Total Profit across all Regions are 85 M\", download_udpipe = FALSE) #> [1] \"Total Profit across all Regions is 85 M\""},{"path":"https://denisabd.github.io/narrator/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Denis Abdullin. Author, maintainer.","code":""},{"path":"https://denisabd.github.io/narrator/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Abdullin D (2023). narrator: Create Natural Language Text Narratives Data. R package version 0.0.1, https://denisabd.github.io/narrator/.","code":"@Manual{,   title = {narrator: Create Natural Language Text Narratives from the Data},   author = {Denis Abdullin},   year = {2023},   note = {R package version 0.0.1},   url = {https://denisabd.github.io/narrator/}, }"},{"path":"https://denisabd.github.io/narrator/index.html","id":"narrator-","dir":"","previous_headings":"","what":"Create Natural Language Text Narratives from the Data","title":"Create Natural Language Text Narratives from the Data","text":"Template-based NLG framework creating text narratives data. Demo shiny application showing core package capabilities deployed shinyapps.io.","code":""},{"path":"https://denisabd.github.io/narrator/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Natural Language Text Narratives from the Data","text":"can install development version narrator GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"denisabd/narrator\")"},{"path":"https://denisabd.github.io/narrator/index.html","id":"basic-use","dir":"","previous_headings":"","what":"Basic Use","title":"Create Natural Language Text Narratives from the Data","text":"","code":"library(narrator) library(dplyr) library(knitr)  sales %>%   narrate_descriptive(measure = \"Sales\",                dimensions = c(\"Region\", \"Product\")) #> $`Total Sales` #> Total Sales across all Regions: 2.1 M. #>  #> $`Region by Sales` #> Outlying Regions by Sales are NA (1 M, 47.4 %), EMEA (655.4 K, 30.7 %). #>  #> $`NA by Product` #> In NA, significant Products by Sales are Product E (241.6 K, 23.9 %), Product B (201.9 K, 20 %), Product F (154.1 K, 15.2 %). #>  #> $`EMEA by Product` #> In EMEA, significant Products by Sales are Product E (198.6 K, 30.3 %), Product B (95.9 K, 14.6 %), Product F (92.9 K, 14.2 %). #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). sales %>%   group_by(Region) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales)) %>%   mutate(Share = round(Sales/sum(Sales), 3)) %>%   janitor::adorn_totals() %>%   kable() sales %>%   group_by(Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) %>%   arrange(desc(Sales)) %>%   janitor::adorn_totals() %>%   kable()"},{"path":"https://denisabd.github.io/narrator/reference/add_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Add HTML Tags to Text — add_tag","title":"Add HTML Tags to Text — add_tag","text":"Add HTML Tags Text","code":""},{"path":"https://denisabd.github.io/narrator/reference/add_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add HTML Tags to Text — add_tag","text":"","code":"add_tag(text, tag = \"h3\")"},{"path":"https://denisabd.github.io/narrator/reference/add_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add HTML Tags to Text — add_tag","text":"text Text string tag HTML tag like p, b, h1 ","code":""},{"path":"https://denisabd.github.io/narrator/reference/add_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add HTML Tags to Text — add_tag","text":"glue  character HTML tags","code":""},{"path":[]},{"path":"https://denisabd.github.io/narrator/reference/add_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add HTML Tags to Text — add_tag","text":"","code":"add_tag(\"Title Text\", tag = \"h2\") #> <h2> Title Text <\/h2> add_tag(\"bold text\", tag = \"b\") #> <b> bold text <\/b>"},{"path":"https://denisabd.github.io/narrator/reference/clean_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean HTML Tags from the Text — clean_tags","title":"Clean HTML Tags from the Text — clean_tags","text":"Clean HTML Tags Text","code":""},{"path":"https://denisabd.github.io/narrator/reference/clean_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean HTML Tags from the Text — clean_tags","text":"","code":"clean_tags(html_string)"},{"path":"https://denisabd.github.io/narrator/reference/clean_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean HTML Tags from the Text — clean_tags","text":"html_string Text html tags","code":""},{"path":"https://denisabd.github.io/narrator/reference/clean_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean HTML Tags from the Text — clean_tags","text":"character() vector text strings without tags","code":""},{"path":[]},{"path":"https://denisabd.github.io/narrator/reference/clean_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean HTML Tags from the Text — clean_tags","text":"","code":"clean_tags(\"<b>Total increase is equal to 14.5 % <\/b>\") #> [1] \"Total increase is equal to 14.5 %\" clean_tags(\"<h2>Sales by Region<\/h3>\") #> [1] \"Sales by Region\""},{"path":"https://denisabd.github.io/narrator/reference/clean_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Text String — clean_text","title":"Clean Text String — clean_text","text":"Function cleans text string improving narration, removing excessive white spaces","code":""},{"path":"https://denisabd.github.io/narrator/reference/clean_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Text String — clean_text","text":"","code":"clean_text(   text,   upper = c(\"YTD\", \"PYTD\"),   lower = c(\"vs\", \"br\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"b\") )"},{"path":"https://denisabd.github.io/narrator/reference/clean_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Text String — clean_text","text":"text Text string cleaning. Can contain multiple sentences. upper Vector words need changed uppercase text lower Vector words need changed lowercase text","code":""},{"path":"https://denisabd.github.io/narrator/reference/clean_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Text String — clean_text","text":"Text string","code":""},{"path":"https://denisabd.github.io/narrator/reference/clean_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Text String — clean_text","text":"","code":"text <- \"Similarly in 2020 the sum of spend increased by 15.4%  ( 4.3 % higher  than average).\" clean_text(text) #> [1] \"Similarly in 2020 the sum of spend increased by 15.4 % (4.3 % higher than average).\" clean_text(\" Total  is 12,300 Orders ( 23.5 % for East  ) \") #> [1] \"Total is 12,300 Orders (23.5 % for East)\""},{"path":"https://denisabd.github.io/narrator/reference/correct_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct the Sentence Using UDPIPE — correct_text","title":"Correct the Sentence Using UDPIPE — correct_text","text":"Correct Sentence Using UDPIPE","code":""},{"path":"https://denisabd.github.io/narrator/reference/correct_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct the Sentence Using UDPIPE — correct_text","text":"","code":"correct_text(text, language = \"english\", download_udpipe = TRUE, measure = \"\")"},{"path":"https://denisabd.github.io/narrator/reference/correct_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct the Sentence Using UDPIPE — correct_text","text":"text Text string correction language Language udpipe model, defaults 'english' download_udpipe Download udpipe working directory measure Measure template","code":""},{"path":"https://denisabd.github.io/narrator/reference/correct_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct the Sentence Using UDPIPE — correct_text","text":"Text string","code":""},{"path":"https://denisabd.github.io/narrator/reference/correct_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct the Sentence Using UDPIPE — correct_text","text":"","code":"correct_text(\"In 2020 total Sales across all Regions (EMEA, NA, ASPAC) is equal to 23.5 M\") #> Loading required namespace: udpipe #> [1] \"In 2020 total Sales across all Regions ( EMEA , NA , ASPAC ) are equal to 23.5 MS\" correct_text(\"Total Profit across all Regions are 85 M\") #> [1] \"Total Profit across all Regions is 85 M\""},{"path":"https://denisabd.github.io/narrator/reference/format_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numeric Values — format_num","title":"Format Numeric Values — format_num","text":"Format Numeric Values","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numeric Values — format_num","text":"","code":"format_num(   num,   format = \"auto\",   decimals = 1,   threshold = 10000,   format_list = c(\"\", \"K\", \"M\", \"B\", \"T\") )"},{"path":"https://denisabd.github.io/narrator/reference/format_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numeric Values — format_num","text":"num Number numeric vector format Format numeric output - \"auto\", \"K\", \"M\", \"B\" \"T\" decimals Number decimal numbers rounding threshold Threshold converting specific format, threshold thousand delimiters added format_list List formats use automated","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numeric Values — format_num","text":"character() vector","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numeric Values — format_num","text":"","code":"format_num(27334254) #> [1] \"27.3 M\" format_num(c(27334254, 12332, 23425435534)) #> [1] \"27.3 M\" \"12.3 K\" \"23.4 B\""},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Format numeric value — format_number","title":"Format numeric value — format_number","text":"Format numeric value","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format numeric value — format_number","text":"","code":"format_number(   num,   format = \"auto\",   decimals = 1,   threshold = 10000,   format_list = c(\"\", \"K\", \"M\", \"B\", \"T\") )"},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format numeric value — format_number","text":"num Number numeric vector format Format numeric output - \"auto\", \"K\", \"M\", \"B\" \"T\" decimals Number decimal numbers rounding threshold Threshold converting specific format, threshold thousand delimiters added format_list List formats use automated","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format numeric value — format_number","text":"vector numerics","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format numeric value — format_number","text":"","code":"format_number(27334254) #> [1] \"27.3 M\" format_number(c(27334254, 12332, 23425435534)) #> [1] \"27.3 M\" \"12.3 K\" \"23.4 B\""},{"path":"https://denisabd.github.io/narrator/reference/format_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Add HTML Tags with Colors to Percentage Values in Text — format_pct","title":"Add HTML Tags with Colors to Percentage Values in Text — format_pct","text":"Add HTML Tags Colors Percentage Values Text","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add HTML Tags with Colors to Percentage Values in Text — format_pct","text":"","code":"format_pct(text, positive = \"green\", negative = \"red\")"},{"path":"https://denisabd.github.io/narrator/reference/format_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add HTML Tags with Colors to Percentage Values in Text — format_pct","text":"text Text string character vector/list text strings positive Color highlight percentage increase negative Color highlight percentage decline","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add HTML Tags with Colors to Percentage Values in Text — format_pct","text":"list() text strings","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add HTML Tags with Colors to Percentage Values in Text — format_pct","text":"","code":"text <- \"Spend increased by 13.2 % in EMEA but decreased by -13.2 % in LATAM\" format_pct(text) #> [[1]] #> [1] \"Spend increased by <b> <span style='color: green;'>13.2 %<\/span> <\/b> in EMEA but decreased by <b> <span style='color: red;'>-13.2 %<\/span> <\/b> in LATAM\" #>"},{"path":"https://denisabd.github.io/narrator/reference/format_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Add HTML Tags to Add Color and Boldness — format_text","title":"Add HTML Tags to Add Color and Boldness — format_text","text":"Function adds html code around selected string adding options colorized /bold display HTML documents.","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add HTML Tags to Add Color and Boldness — format_text","text":"","code":"format_text(text, color = \"auto\", bold = TRUE)"},{"path":"https://denisabd.github.io/narrator/reference/format_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add HTML Tags to Add Color and Boldness — format_text","text":"text Text string want format color Color name, \"auto\" color determined based number parsed - red negative, green positive bold Make text bold ","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add HTML Tags to Add Color and Boldness — format_text","text":"text HTML tags","code":""},{"path":"https://denisabd.github.io/narrator/reference/format_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add HTML Tags to Add Color and Boldness — format_text","text":"","code":"text <- format_text(\"1.2%\", color = \"auto\", bold = TRUE) text #> [1] \"<b> <span style='color: green;'>1.2%<\/span> <\/b>\""},{"path":"https://denisabd.github.io/narrator/reference/is_plural.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Plural State of an English Word — is_plural","title":"Test Plural State of an English Word — is_plural","text":"Test Plural State English Word","code":""},{"path":"https://denisabd.github.io/narrator/reference/is_plural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Plural State of an English Word — is_plural","text":"","code":"is_plural(x)  is_singular(x)"},{"path":"https://denisabd.github.io/narrator/reference/is_plural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Plural State of an English Word — is_plural","text":"x vector words test","code":""},{"path":"https://denisabd.github.io/narrator/reference/is_plural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Plural State of an English Word — is_plural","text":"logical vector","code":""},{"path":"https://denisabd.github.io/narrator/reference/is_plural.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Plural State of an English Word — is_plural","text":"","code":"is_singular(c(\"boats\", \"house\", \"cats\", \"river\")) #> [1] FALSE  TRUE FALSE  TRUE is_plural(c(\"boats\", \"house\", \"cats\", \"river\")) #> [1]  TRUE FALSE  TRUE FALSE"},{"path":"https://denisabd.github.io/narrator/reference/list_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a Table of all Templates Currently Available in the Package — list_templates","title":"Return a Table of all Templates Currently Available in the Package — list_templates","text":"Return Table Templates Currently Available Package","code":""},{"path":"https://denisabd.github.io/narrator/reference/list_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a Table of all Templates Currently Available in the Package — list_templates","text":"","code":"list_templates()"},{"path":"https://denisabd.github.io/narrator/reference/list_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a Table of all Templates Currently Available in the Package — list_templates","text":"tibble templates functions packages","code":""},{"path":"https://denisabd.github.io/narrator/reference/list_templates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a Table of all Templates Currently Available in the Package — list_templates","text":"","code":"list_templates() #> # A tibble: 5 × 4 #>   fun                 type        name                         template          #>   <chr>               <chr>       <chr>                        <chr>             #> 1 narrate_descriptive descriptive template_total               Total {measure} … #> 2 narrate_descriptive descriptive template_outlier             Outlying {dimens… #> 3 narrate_descriptive descriptive template_outlier_multiple    Outlying {plural… #> 4 narrate_descriptive descriptive template_outlier_l2          In {dim_l1}, sig… #> 5 narrate_descriptive descriptive template_outlier_l2_multiple In {dim_l1}, sig…"},{"path":"https://denisabd.github.io/narrator/reference/narrate_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Descriptive Narrative — narrate_desc","title":"Create Descriptive Narrative — narrate_desc","text":"Create Descriptive Narrative","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrate_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Descriptive Narrative — narrate_desc","text":"","code":"narrate_desc(   df,   measure = NULL,   dimensions = NULL,   coverage = 0.5,   coverage_limit = 5,   narrative_total = \"{measure} across all {pluralize(dimension1)} is {total}. \",   narrative_outlier = \"Outlying {dimension} by {measure} is {outlier_insight}. \",   narrative_outlier_multiple =     \"Outlying {pluralize(dimension)} by {measure} are {outlier_insight}. \",   ... )"},{"path":"https://denisabd.github.io/narrator/reference/narrate_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Descriptive Narrative — narrate_desc","text":"...","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrate_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Descriptive Narrative — narrate_desc","text":"","code":"sales %>% narrate_desc(measure = \"Sales\",             dimensions = c(\"Territory\", \"State\")) #> Sales across all Territories is 10032628.85. Outlying Territory by Sales is EMEA (5 M, 49.6%). Outlying State by Sales is ."},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Descriptive Text Narratives from Data — narrate_descriptive","title":"Create Descriptive Text Narratives from Data — narrate_descriptive","text":"narrate_descriptive() creates text narratives data frame containing one numeric one character factor text columns using glue syntax. Function can work raw aggregated data frame. automatically use first numeric column measure character factor columns dimensions","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Descriptive Text Narratives from Data — narrate_descriptive","text":"","code":"narrate_descriptive(   df,   measure = NULL,   dimensions = NULL,   summarization = \"sum\",   coverage = 0.5,   coverage_limit = 5,   narration_depth = 2,   template_total = \"Total {measure} across all {pluralize(dimension1)}: {total}.\",   template_outlier = \"Outlying {dimension} by {measure} is {outlier_insight}.\",   template_outlier_multiple =     \"Outlying {pluralize(dimension)} by {measure} are {outlier_insight}.\",   template_outlier_l2 =     \"In {dim_l1}, significant {dim_l2} by {measure} is {outlier_insight}.\",   template_outlier_l2_multiple =     \"In {dim_l1}, significant {pluralize(dim_l2)} by {measure} are {outlier_insight}.\",   use_renviron = FALSE,   return_data = FALSE,   simplify = FALSE,   format_numbers = TRUE,   ... )"},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Descriptive Text Narratives from Data — narrate_descriptive","text":"df data.frame() tibble() Data frame tibble, can aggregated raw measure Numeric measure function create calculations , NULL take first numeric field available dimensions Vector dimensions analysis, default character factor variable used summarization Approach data summarization/aggregation - 'sum', 'count' 'mean' coverage Numeric portion variability covered narrative, 0 1 coverage_limit Integer maximum number elements narrated, overrides coverage avoid extremely verbose narrative creation narration_depth Parameter control depth analysis 1 summary 2 detailed template_total glue template total volumes narrative template_outlier glue template single outlier narrative template_outlier_multiple glue template multiple outliers narrative template_outlier_l2 glue template deeper hierarchical single outlier narrative template_outlier_l2_multiple glue template deeper hierarchical multiple outliers narrative use_renviron TRUE use .Renviron variables template return_data TRUE - return list variables used function's templates simplify TRUE - return character vector, FALSE - named list format_numbers TRUE - format big numbers K/M/B using format_num() function ... arguments passed glue","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Descriptive Text Narratives from Data — narrate_descriptive","text":"tibble() default character() simplify = TRUE","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrate_descriptive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Descriptive Text Narratives from Data — narrate_descriptive","text":"","code":"sales %>% narrate_descriptive(measure = \"Sales\",             dimensions = c(\"Region\", \"Product\")) #> $`Total Sales` #> Total Sales across all Regions: 2.1 M. #>  #> $`Region by Sales` #> Outlying Regions by Sales are NA (1 M, 47.4 %), EMEA (655.4 K, 30.7 %). #>  #> $`NA by Product` #> In NA, significant Products by Sales are Product E (241.6 K, 23.9 %), Product B (201.9 K, 20 %), Product F (154.1 K, 15.2 %). #>  #> $`EMEA by Product` #> In EMEA, significant Products by Sales are Product E (198.6 K, 30.3 %), Product B (95.9 K, 14.6 %), Product F (92.9 K, 14.2 %). #>  #> $`Product by Sales` #> Outlying Products by Sales are Product E (546.9 K, 25.6 %), Product B (396.7 K, 18.6 %), Product F (326.2 K, 15.3 %). #>   sales %>%   dplyr::filter(Product %in% c(\"Product A\", \"Product B\")) %>%   dplyr::group_by(Product, Region)  %>%   dplyr::summarise(Quantity = sum(Quantity)) %>%   narrate_descriptive() #> `summarise()` has grouped output by 'Product'. You can override using the #> `.groups` argument. #> $`Total Quantity` #> Total Quantity across all Products: 3,622. #>  #> $`Product by Quantity` #> Outlying Product by Quantity is Product B (2,862, 79 %). #>  #> $`Product B by Region` #> In Product B, significant Regions by Quantity are NA (1,377, 48.1 %), EMEA (765, 26.7 %). #>  #> $`Region by Quantity` #> Outlying Regions by Quantity are NA (1,781, 49.2 %), EMEA (893, 24.7 %). #>   sales %>% narrate_descriptive(measure = \"Order ID\", dimensions = \"Region\", summarization = \"count\") #> $`Total Order ID` #> Total Order ID across all Regions: 1,000. #>  #> $`Region by Order ID` #> Outlying Regions by Order ID are NA (464, 46.4 %), EMEA (303, 30.3 %). #>"},{"path":"https://denisabd.github.io/narrator/reference/narratorServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Server Logic for Narrator — narratorServer","title":"Server Logic for Narrator — narratorServer","text":"Server logic shiny module work together narratorUI","code":""},{"path":"https://denisabd.github.io/narrator/reference/narratorServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server Logic for Narrator — narratorServer","text":"","code":"narratorServer(id, df, summarization = \"sum\", ...)"},{"path":"https://denisabd.github.io/narrator/reference/narratorServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server Logic for Narrator — narratorServer","text":"id Namespace specification df Reactive data frame summarization Summarization/aggregation data - 'sum', 'count' 'mean' ... Additional arguments narrate_* functions","code":""},{"path":"https://denisabd.github.io/narrator/reference/narratorServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server Logic for Narrator — narratorServer","text":"Narrative output","code":""},{"path":"https://denisabd.github.io/narrator/reference/narratorServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server Logic for Narrator — narratorServer","text":"","code":"library(shiny) library(narrator) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  df <- sales %>%   group_by(Region, Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) #> `summarise()` has grouped output by 'Region'. You can override using the #> `.groups` argument.  ui <- fluidPage(   narratorUI(id = \"main\") )  server <- function(input, output, session) {   narratorServer(     id = \"main\",     df = reactive(df),     format = TRUE,     summarization = \"sum\") }  if (interactive()) shinyApp(ui, server)"},{"path":"https://denisabd.github.io/narrator/reference/narratorUI.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Module for Narrator — narratorUI","title":"Shiny Module for Narrator — narratorUI","text":"UI shiny module work together narratorServer","code":""},{"path":"https://denisabd.github.io/narrator/reference/narratorUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Module for Narrator — narratorUI","text":"","code":"narratorUI(   id,   narration_depth = 2,   coverage = 0.5,   coverage_limit = 5,   format = TRUE,   ... )"},{"path":"https://denisabd.github.io/narrator/reference/narratorUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Module for Narrator — narratorUI","text":"id Namespace specification narration_depth Parameter control depth analysis 1 summary 2 detailed coverage Numeric portion variability covered narrative, 0 1 coverage_limit Integer maximum number elements narrated, overrides coverage avoid extremely verbose narrative creation format TRUE - format text HTML tags ... arguments passed glue","code":""},{"path":"https://denisabd.github.io/narrator/reference/narratorUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny Module for Narrator — narratorUI","text":"UI","code":""},{"path":"https://denisabd.github.io/narrator/reference/narratorUI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny Module for Narrator — narratorUI","text":"","code":"library(shiny) library(narrator) library(dplyr)  df <- sales %>%   group_by(Region, Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) #> `summarise()` has grouped output by 'Region'. You can override using the #> `.groups` argument.  ui <- fluidPage(   narratorUI(id = \"main\") )  server <- function(input, output, session) {   narratorServer(     id = \"main\",     df = reactive(df),     format = TRUE,     summarization = \"sum\") }  if (interactive()) shinyApp(ui, server)"},{"path":"https://denisabd.github.io/narrator/reference/narrator_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"UI Module for Narrator — narrator_shiny","title":"UI Module for Narrator — narrator_shiny","text":"UI shiny module work together narratorServer Server logic shiny module work together narratorUI","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrator_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI Module for Narrator — narrator_shiny","text":"","code":"narratorUI(   id,   narration_depth = 2,   coverage = 0.5,   coverage_limit = 5,   format = TRUE,   ... )  narratorServer(id, df, summarization = \"sum\", format = TRUE, ...)"},{"path":"https://denisabd.github.io/narrator/reference/narrator_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI Module for Narrator — narrator_shiny","text":"id Namespace specification format TRUE - format text HTML tags ... Additional arguments narrate_* functions df Reactive data frame","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrator_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI Module for Narrator — narrator_shiny","text":"UI Narrative output","code":""},{"path":"https://denisabd.github.io/narrator/reference/narrator_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UI Module for Narrator — narrator_shiny","text":"","code":"library(shiny) library(narrator) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  df <- sales %>%   group_by(Region, Product) %>%   summarise(Sales = sum(Sales, na.rm = TRUE)) #> `summarise()` has grouped output by 'Region'. You can override using the #> `.groups` argument.  ui <- fluidPage(   narratorUI(id = \"main\") )  server <- function(input, output, session) {   narratorServer(     id = \"main\",     df = reactive(df),     format = TRUE,     summarization = \"sum\") }  if (interactive()) shinyApp(ui, server)"},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe Operator — %>%","title":"Pipe Operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe Operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe Operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://denisabd.github.io/narrator/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe Operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":null,"dir":"Reference","previous_headings":"","what":"Pluralize a Word in English — pluralize","title":"Pluralize a Word in English — pluralize","text":"Pluralize Word English","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pluralize a Word in English — pluralize","text":"","code":"pluralize(x, n = 2, prepend = FALSE)"},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pluralize a Word in English — pluralize","text":"x character vector words make plural n number plural (plurals change amount also impacts prepend functionality) prepend prepend value n output? Default: FALSE","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pluralize a Word in English — pluralize","text":"character vector modified pluralized words","code":""},{"path":"https://denisabd.github.io/narrator/reference/pluralize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pluralize a Word in English — pluralize","text":"","code":"pluralize('test') #> [1] \"tests\" pluralize('test', 5) #> [1] \"tests\" pluralize('test', 5, TRUE) #> [1] \"5 tests\" pluralize('regex') #> [1] \"regexes\""},{"path":"https://denisabd.github.io/narrator/reference/sales.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Sales Data — sales","title":"Synthetic Sales Data — sales","text":"Synthetic Sales Data","code":""},{"path":"https://denisabd.github.io/narrator/reference/sales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Sales Data — sales","text":"","code":"sales"},{"path":"https://denisabd.github.io/narrator/reference/sales.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Sales Data — sales","text":"tibble 1000 rows 8 variables: Order ID Unique ID order Date Date Order creation Region Region/Region shipment Product Product Name Promotion Promotion present Price Raw unit price quantity Quantity Number units sold Sales Final Sales, including promotional discounts","code":""},{"path":"https://denisabd.github.io/narrator/reference/sales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Sales Data — sales","text":"","code":"sales #> # A tibble: 1,000 × 8 #>    `Order ID` Date       Region Product   Promotion Price Quantity Sales #>    <chr>      <date>     <chr>  <chr>         <int> <dbl>    <int> <dbl> #>  1 QR10001    2019-01-01 NA     Product E         0 156.        26 4048. #>  2 QR10002    2019-01-03 NA     Product F         0  83.7        8  670. #>  3 QR10003    2019-01-05 NA     Product B         0 182.         7 1273. #>  4 QR10004    2019-01-06 EMEA   Product B         0 158.        20 3152  #>  5 QR10005    2019-01-08 NA     Product B         0 237.        29 6879. #>  6 QR10006    2019-01-08 NA     Product D         1 182.        13 1889. #>  7 QR10007    2019-01-09 EMEA   Product B         0 240.        22 5282. #>  8 QR10008    2019-01-09 ASPAC  Product B         0 275.        24 6590. #>  9 QR10009    2019-01-09 NA     Product C         0  38.5       22  847  #> 10 QR10010    2019-01-10 NA     Product I         0 217.        21 4561. #> # … with 990 more rows"},{"path":"https://denisabd.github.io/narrator/reference/singularize.html","id":null,"dir":"Reference","previous_headings":"","what":"Singularize a Word in English — singularize","title":"Singularize a Word in English — singularize","text":"Singularize Word English","code":""},{"path":"https://denisabd.github.io/narrator/reference/singularize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Singularize a Word in English — singularize","text":"","code":"singularize(x)"},{"path":"https://denisabd.github.io/narrator/reference/singularize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Singularize a Word in English — singularize","text":"x vector words make singular","code":""},{"path":"https://denisabd.github.io/narrator/reference/singularize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Singularize a Word in English — singularize","text":"modified character vector singularized words","code":""},{"path":"https://denisabd.github.io/narrator/reference/singularize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Singularize a Word in English — singularize","text":"","code":"singularize('test') #> [1] \"test\" singularize(c(\"boats\", \"houses\", \"cats\", \"rivers\")) #> [1] \"boat\"  \"house\" \"cat\"   \"river\" pluralize(singularize(c(\"boats\", \"houses\", \"cats\", \"rivers\"))) #> [1] \"boats\"  \"houses\" \"cats\"   \"rivers\" singularize(c(\"buses\", \"wishes\", \"pitches\", \"boxexs\")) #> [1] \"bus\"   \"wish\"  \"pitch\" \"boxex\" pluralize(singularize(c(\"buses\", \"wishes\", \"pitches\", \"boxexs\"))) #> [1] \"buses\"   \"wishes\"  \"pitches\" \"boxexes\" singularize(c(\"pennies\", \"spies\", \"babies\", \"cities\", \"daisies\")) #> [1] \"penny\"  \"spy\"    \"baby\"   \"city\"   \"daisie\" pluralize(singularize(c(\"pennies\", \"spies\", \"babies\", \"cities\", \"daisies\"))) #> [1] \"pennies\" \"spies\"   \"babies\"  \"cities\"  \"daisies\" singularize(c(\"sheep\", \"fish\", \"deer\", \"species\", \"aircraft\")) #> [1] \"sheep\"    \"fish\"     \"deer\"     \"specie\"   \"aircraft\" pluralize(singularize(c(\"sheep\", \"fish\", \"deer\", \"species\", \"aircraft\"))) #> [1] \"sheep\"    \"fish\"     \"deer\"     \"species\"  \"aircraft\""},{"path":"https://denisabd.github.io/narrator/news/index.html","id":"narrator-001","dir":"Changelog","previous_headings":"","what":"narrator 0.0.1","title":"narrator 0.0.1","text":"Initial package release","code":""}]
